// pages/makeminipro/makeminipro.js
var util = require('../../utils/util')
var app = getApp();
Page({

    /**
     * 页面的初始数据
     */
    data: {
        username: wx.getStorageSync('userName'),
        phone: wx.getStorageSync('phone'),
        code:'',
        countdowntime: 60,
        timeView: 60,
        isSend: false,
        show: false
    },

    getCode:function(){
        var _this = this;
        if (!this.data.phone) {
            wx.showToast({
              title: "手机号不得为空",
              icon: "none",
              duration: 2000,
            });
            return false;
          }
          if (this.data.phone.length != 11) {
            if (util.phone(this.data.userPhone)) {
              wx.showToast({
                title: "手机号位数不正确",
                icon: "none",
                duration: 2000,
              });
            }
            return false;
          }
          if (util.phone(this.data.phone)) {
            wx.showToast({
              title: "手机号格式不正确",
              icon: "none",
              duration: 2000,
            });
            return false;
          }
          wx.request({
            url: app.globalData.baseUrl + "/ty/heatingAdmin/sedSms/makeProcedureSms",
            method: "post",
            header: {
                "content-type": "application/x-www-form-urlencoded", // 默认值
                "token": app.globalData.token
            },
            data: {
                phone: _this.data.phone,
            },
            success(res){
              _this.countdown(_this.data.countdowntime);
            }
          })
    },

    onFormSubmit:function(){
        var _this = this;
        if (!this.data.username) {
            wx.showToast({
              title: "姓名不得为空",
              icon: "none",
              duration: 2000,
            });
            return false;
          }
          if (!this.data.phone) {
            wx.showToast({
              title: "手机号不得为空",
              icon: "none",
              duration: 2000,
            });
            return false;
          }
          if (this.data.phone.length != 11) {
            if (util.phone(this.data.phone)) {
              wx.showToast({
                title: "手机号位数不正确",
                icon: "none",
                duration: 2000,
              });
            }
            return false;
          }
          if (util.phone(this.data.phone)) {
            wx.showToast({
              title: "手机号格式不正确",
              icon: "none",
              duration: 2000,
            });
            return false;
          }
          if (!this.data.code) {
            wx.showToast({
              title: "验证码不得为空",
              icon: "none",
              duration: 2000,
            });
            return false;
          }

          wx.request({
            url: app.globalData.baseUrl + "/ty/heatingApplet/procedure/addProcedure",
            method: "post",
            header: {
                "content-type": "application/json", // 默认值
                "token": app.globalData.token
            },
            data: {
                username: _this.data.username,
                phone: _this.data.phone,
                code: _this.data.code
            },
            success(res){
                if (res.data.status == "0000") {
                      _this.setData({
                        show: true
                      })
                }else{
                    wx.showToast({
                        title: res.data.message,
                        icon: "none",
                        duration: 2000,
                      });
                }
               
            }
        })
    },

    goUrl(){
      wx.switchTab({
        url: '/pages/index/index',
      })
    },

    countdown(time){
      this.setData({
        timeView : time,
        isSend: true
      })
      let timer = setInterval(() => {
          if(time == 0){
              clearInterval(timer)
              this.setData({
                isSend: false
              })
          }else {
              this.setData({
                timeView : --time
              })
          }
      },1000)
  },

    /**
     * 生命周期函数--监听页面加载
     */
    onLoad: function (options) {

    },

    /**
     * 生命周期函数--监听页面初次渲染完成
     */
    onReady: function () {

    },

    /**
     * 生命周期函数--监听页面显示
     */
    onShow: function () {

    },






   
})